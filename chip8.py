import os

from typing import List


class Chip8(object):
    MEM_SIZE = 4096
    REG_NUM = 16
    REG_SIZE = 1  # bytes

    FONT_SET = [
        0xF0, 0x90, 0x90, 0x90, 0xF0,  # 0
        0x20, 0x60, 0x20, 0x20, 0x70,  # 1
        0xF0, 0x10, 0xF0, 0x80, 0xF0,  # 2
        0xF0, 0x10, 0xF0, 0x10, 0xF0,  # 3
        0x90, 0x90, 0xF0, 0x10, 0x10,  # 4
        0xF0, 0x80, 0xF0, 0x10, 0xF0,  # 5
        0xF0, 0x80, 0xF0, 0x90, 0xF0,  # 6
        0xF0, 0x10, 0x20, 0x40, 0x40,  # 7
        0xF0, 0x90, 0xF0, 0x90, 0xF0,  # 8
        0xF0, 0x90, 0xF0, 0x10, 0xF0,  # 9
        0xF0, 0x90, 0xF0, 0x90, 0x90,  # A
        0xE0, 0x90, 0xE0, 0x90, 0xE0,  # B
        0xF0, 0x80, 0x80, 0x80, 0xF0,  # C
        0xE0, 0x90, 0x90, 0x90, 0xE0,  # D
        0xF0, 0x80, 0xF0, 0x80, 0xF0,  # E
        0xF0, 0x80, 0xF0, 0x80, 0x80  # F
    ]

    def __init__(self):
        self._opCode: bytes = bytes(length=2)
        self._pc: int = 0x200
        self._index: int = 0

        self._delayTimer: int = 0
        self._soundTimer: int = 0

        self._stack: List[int] = [0] * 16
        self._stackPtr: int = 0

        self._memory: bytearray = bytearray(Chip8.MEM_SIZE)
        self._registers: List[bytes] = [bytes(Chip8.REG_SIZE)] * Chip8.REG_NUM

    def _init_memory(self):
        self._memory[0:0x50] = Chip8.FONT_SET

    def load_rom(self):

        rom_list = [f[0] for r, d, f in os.walk("./roms")]

        with open(rom_list[0], "rb") as f:
            self._memory[0x200::] = f.read()

if __name__ == "main":
    pass
